name: .NET CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal

      # Optional: Uncomment and configure SonarCloud if needed
      # - name: Run SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     args: >
      #       -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
      #       -Dsonar.organization=${{ github.repository_owner }}

      - name: Create suppression file
        run: |
          cat > suppression.xml << 'EOL'
          <?xml version="1.0" encoding="UTF-8"?>
          <suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
              <suppress>
                  <notes>False positive f√ºr Npgsql.EntityFrameworkCore.PostgreSQL</notes>
                  <packageUrl regex="true">^pkg:generic/Npgsql\.EntityFrameworkCore\.PostgreSQL@.*$</packageUrl>
                  <cpe>cpe:/a:postgresql:postgresql</cpe>
                  <cpe>cpe:/a:www-sql_project:www-sql</cpe>
              </suppress>
          </suppressions>
          EOL

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'ome.API'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
             --suppression "${GITHUB_WORKSPACE}/suppression.xml"

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build & push to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}

  deploy-to-coolify:
    runs-on: ubuntu-latest
    needs: build-test-and-scan
    if: success() && github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - name: Trigger Coolify Deployment Webhook
        run: |
          curl -X POST "https://${{ secrets.COOLIFY_WEBHOOK_URL }}/api/v1/webhooks/${{ secrets.COOLIFY_WEBHOOK_ID }}?token=${{ secrets.COOLIFY_WEBHOOK_TOKEN }}"
